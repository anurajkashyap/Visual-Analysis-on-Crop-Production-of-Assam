shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?tabsetPanel
runApp()
shiny::runApp()
install.packages(shinydashboard)
install.packages("shinydashboard")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?dashboardPage
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
c_image = img(src = 'www/Assam_agriculture.jpeg')
c_image
view(c_image)
plot(c_image)
install.packages('imager')
library(imager)
plot(c_image)
c_image
View(c_image)
View(c_image)
library(jpeg)
plot()
rasterImage(c_image)
library(imager)
c_image = load.image('www/Assam_agriculture.jpeg')
?tags
?image
?img
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(ggplot2)
library(dplyr)
library(cowplot)
library(ggpubr)
data = read.csv("crop_production.csv")
data = read.csv("Data\crop_production.csv")
data = read.csv("Data/crop_production.csv")
assam_data = data[data$State_Name == "Assam",][,-c(1)]
assam_data = na.omit(assam_data)
head(assam_data)
summary(assam_data)
unique(assam_data$District_Name)
unique(assam_data$Crop_Year)
unique(assam_data$Season)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('~/demo')
install.packages("DT")
runApp('~/demo')
library(plotly)
library('plotly')
install.packages("plotly")
runApp('~/demo')
install.packages("stinepack")
runApp('~/demo')
install.packages("shinyLP")
runApp('~/demo')
install.packages("shinyBS")
runApp('~/demo')
runApp()
runApp()
?geom_bar
runApp()
?geom_bar
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(ggplot2)
library(dplyr)
library(cowplot)
library(ggpubr)
data = read.csv("crop_production.csv")
data = read.csv("Data/crop_production.csv")
assam_data = data[data$State_Name == "Assam",][,-c(1)]
assam_data = na.omit(assam_data)
na.omit(read.csv("Data/crop_production.csv")[read.csv("Data/crop_production.csv")$State_Name == "Assam",][,-c(1)])[na.omit(read.csv("Data/crop_production.csv")[read.csv("Data/crop_production.csv")$State_Name == "Assam",][,-c(1)])$Crop == reactive(input$select1),] %>% group_by(District_Name) %>% summarise(t_production = mean(Production), .groups = 'drop')[order(df_grp_by_dist_rice$t_production, decreasing = TRUE),][1:input$slider1,]
assam_data = data[data$State_Name == "Assam",][,-c(1)]
assam_data = na.omit(assam_data)
na.omit(read.csv("Data/crop_production.csv")[read.csv("Data/crop_production.csv")$State_Name == "Assam",][,-c(1)])[na.omit(read.csv("Data/crop_production.csv")[read.csv("Data/crop_production.csv")$State_Name == "Assam",][,-c(1)])$Crop == reactive(input$select1),] %>% group_by(District_Name) %>% summarise(t_production = mean(Production), .groups = 'drop')[order(df_grp_by_dist_rice$t_production, decreasing = TRUE),][1:input$slider1,]
head(assam_data)
summary(assam_data)
unique(assam_data$District_Name)
runApp()
runApp()
shiny::runApp()
unique(assam_data$Crop_Year)
runApp()
runApp()
